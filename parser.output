Terminals unused in grammar

   NOOB
   TRASH


Grammar

    0 $accept: program $end

    1 program: START commands END

    2 commands: %empty
    3         | commands command
    4         | WIN IF_BEGIN TRUE_BRANCH commands FALSE_BRANCH commands IF_END

    5 command: definition
    6        | print
    7        | assignment

    8 type: INTEGER
    9     | STRING
   10     | FLOAT

   11 definition: DECL_FST ID
   12           | DECL_FST ID DECL_SND general_exp

   13 print: PRINT ID
   14      | PRINT general_exp

   15 assignment: ID ASSIGN general_exp
   16           | ID ASSIGN ID

   17 exp: type
   18    | ADD exp BINAR exp
   19    | ADD ID BINAR ID
   20    | SUB exp BINAR exp
   21    | SUB ID BINAR ID
   22    | MULT exp BINAR exp
   23    | MULT ID BINAR ID
   24    | DIV exp BINAR exp
   25    | DIV ID BINAR ID
   26    | MOD exp BINAR exp
   27    | MOD ID BINAR ID
   28    | MAXX exp BINAR exp
   29    | MAXX ID BINAR ID
   30    | MINN exp BINAR exp
   31    | MINN ID BINAR ID

   32 bool_exp: WIN
   33         | FAIL
   34         | AND bool_exp BINAR bool_exp
   35         | AND ID BINAR ID
   36         | OR bool_exp BINAR bool_exp
   37         | OR ID BINAR ID
   38         | XOR bool_exp BINAR bool_exp
   39         | XOR ID BINAR ID
   40         | NOT bool_exp
   41         | NOT ID

   42 general_exp: exp
   43            | bool_exp


Terminals, with rules where they appear

$end (0) 0
error (256)
START (258) 1
DECL_FST (259) 11 12
DECL_SND (260) 12
ASSIGN (261) 15 16
STRING (262) 9
INTEGER (263) 8
FLOAT (264) 10
WIN (265) 4 32
FAIL (266) 33
NOOB (267)
END (268) 1
ID (269) 11 12 13 15 16 19 21 23 25 27 29 31 35 37 39 41
PRINT (270) 13 14
ADD (271) 18 19
SUB (272) 20 21
MULT (273) 22 23
DIV (274) 24 25
MOD (275) 26 27
MAXX (276) 28 29
MINN (277) 30 31
BINAR (278) 18 19 20 21 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38
    39
AND (279) 34 35
OR (280) 36 37
XOR (281) 38 39
NOT (282) 40 41
IF_BEGIN (283) 4
TRUE_BRANCH (284) 4
FALSE_BRANCH (285) 4
IF_END (286) 4
TRASH (287)


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
program (34)
    on left: 1, on right: 0
commands (35)
    on left: 2 3 4, on right: 1 3 4
command (36)
    on left: 5 6 7, on right: 3
type (37)
    on left: 8 9 10, on right: 17
definition (38)
    on left: 11 12, on right: 5
print (39)
    on left: 13 14, on right: 6
assignment (40)
    on left: 15 16, on right: 7
exp (41)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31, on right:
    18 20 22 24 26 28 30 42
bool_exp (42)
    on left: 32 33 34 35 36 37 38 39 40 41, on right: 34 36 38 40 43
general_exp (43)
    on left: 42 43, on right: 12 14 15


State 0

    0 $accept: . program $end

    START  shift, and go to state 1

    program  go to state 2


State 1

    1 program: START . commands END

    WIN  shift, and go to state 3

    $default  reduce using rule 2 (commands)

    commands  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    4 commands: WIN . IF_BEGIN TRUE_BRANCH commands FALSE_BRANCH commands IF_END

    IF_BEGIN  shift, and go to state 6


State 4

    1 program: START commands . END
    3 commands: commands . command

    DECL_FST  shift, and go to state 7
    END       shift, and go to state 8
    ID        shift, and go to state 9
    PRINT     shift, and go to state 10

    command     go to state 11
    definition  go to state 12
    print       go to state 13
    assignment  go to state 14


State 5

    0 $accept: program $end .

    $default  accept


State 6

    4 commands: WIN IF_BEGIN . TRUE_BRANCH commands FALSE_BRANCH commands IF_END

    TRUE_BRANCH  shift, and go to state 15


State 7

   11 definition: DECL_FST . ID
   12           | DECL_FST . ID DECL_SND general_exp

    ID  shift, and go to state 16


State 8

    1 program: START commands END .

    $default  reduce using rule 1 (program)


State 9

   15 assignment: ID . ASSIGN general_exp
   16           | ID . ASSIGN ID

    ASSIGN  shift, and go to state 17


State 10

   13 print: PRINT . ID
   14      | PRINT . general_exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    WIN      shift, and go to state 21
    FAIL     shift, and go to state 22
    ID       shift, and go to state 23
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30
    AND      shift, and go to state 31
    OR       shift, and go to state 32
    XOR      shift, and go to state 33
    NOT      shift, and go to state 34

    type         go to state 35
    exp          go to state 36
    bool_exp     go to state 37
    general_exp  go to state 38


State 11

    3 commands: commands command .

    $default  reduce using rule 3 (commands)


State 12

    5 command: definition .

    $default  reduce using rule 5 (command)


State 13

    6 command: print .

    $default  reduce using rule 6 (command)


State 14

    7 command: assignment .

    $default  reduce using rule 7 (command)


State 15

    4 commands: WIN IF_BEGIN TRUE_BRANCH . commands FALSE_BRANCH commands IF_END

    WIN  shift, and go to state 3

    $default  reduce using rule 2 (commands)

    commands  go to state 39


State 16

   11 definition: DECL_FST ID .
   12           | DECL_FST ID . DECL_SND general_exp

    DECL_SND  shift, and go to state 40

    $default  reduce using rule 11 (definition)


State 17

   15 assignment: ID ASSIGN . general_exp
   16           | ID ASSIGN . ID

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    WIN      shift, and go to state 21
    FAIL     shift, and go to state 22
    ID       shift, and go to state 41
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30
    AND      shift, and go to state 31
    OR       shift, and go to state 32
    XOR      shift, and go to state 33
    NOT      shift, and go to state 34

    type         go to state 35
    exp          go to state 36
    bool_exp     go to state 37
    general_exp  go to state 42


State 18

    9 type: STRING .

    $default  reduce using rule 9 (type)


State 19

    8 type: INTEGER .

    $default  reduce using rule 8 (type)


State 20

   10 type: FLOAT .

    $default  reduce using rule 10 (type)


State 21

   32 bool_exp: WIN .

    $default  reduce using rule 32 (bool_exp)


State 22

   33 bool_exp: FAIL .

    $default  reduce using rule 33 (bool_exp)


State 23

   13 print: PRINT ID .

    $default  reduce using rule 13 (print)


State 24

   18 exp: ADD . exp BINAR exp
   19    | ADD . ID BINAR ID

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ID       shift, and go to state 43
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 44


State 25

   20 exp: SUB . exp BINAR exp
   21    | SUB . ID BINAR ID

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ID       shift, and go to state 45
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 46


State 26

   22 exp: MULT . exp BINAR exp
   23    | MULT . ID BINAR ID

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ID       shift, and go to state 47
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 48


State 27

   24 exp: DIV . exp BINAR exp
   25    | DIV . ID BINAR ID

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ID       shift, and go to state 49
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 50


State 28

   26 exp: MOD . exp BINAR exp
   27    | MOD . ID BINAR ID

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ID       shift, and go to state 51
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 52


State 29

   28 exp: MAXX . exp BINAR exp
   29    | MAXX . ID BINAR ID

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ID       shift, and go to state 53
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 54


State 30

   30 exp: MINN . exp BINAR exp
   31    | MINN . ID BINAR ID

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ID       shift, and go to state 55
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 56


State 31

   34 bool_exp: AND . bool_exp BINAR bool_exp
   35         | AND . ID BINAR ID

    WIN   shift, and go to state 21
    FAIL  shift, and go to state 22
    ID    shift, and go to state 57
    AND   shift, and go to state 31
    OR    shift, and go to state 32
    XOR   shift, and go to state 33
    NOT   shift, and go to state 34

    bool_exp  go to state 58


State 32

   36 bool_exp: OR . bool_exp BINAR bool_exp
   37         | OR . ID BINAR ID

    WIN   shift, and go to state 21
    FAIL  shift, and go to state 22
    ID    shift, and go to state 59
    AND   shift, and go to state 31
    OR    shift, and go to state 32
    XOR   shift, and go to state 33
    NOT   shift, and go to state 34

    bool_exp  go to state 60


State 33

   38 bool_exp: XOR . bool_exp BINAR bool_exp
   39         | XOR . ID BINAR ID

    WIN   shift, and go to state 21
    FAIL  shift, and go to state 22
    ID    shift, and go to state 61
    AND   shift, and go to state 31
    OR    shift, and go to state 32
    XOR   shift, and go to state 33
    NOT   shift, and go to state 34

    bool_exp  go to state 62


State 34

   40 bool_exp: NOT . bool_exp
   41         | NOT . ID

    WIN   shift, and go to state 21
    FAIL  shift, and go to state 22
    ID    shift, and go to state 63
    AND   shift, and go to state 31
    OR    shift, and go to state 32
    XOR   shift, and go to state 33
    NOT   shift, and go to state 34

    bool_exp  go to state 64


State 35

   17 exp: type .

    $default  reduce using rule 17 (exp)


State 36

   42 general_exp: exp .

    $default  reduce using rule 42 (general_exp)


State 37

   43 general_exp: bool_exp .

    $default  reduce using rule 43 (general_exp)


State 38

   14 print: PRINT general_exp .

    $default  reduce using rule 14 (print)


State 39

    3 commands: commands . command
    4         | WIN IF_BEGIN TRUE_BRANCH commands . FALSE_BRANCH commands IF_END

    DECL_FST      shift, and go to state 7
    ID            shift, and go to state 9
    PRINT         shift, and go to state 10
    FALSE_BRANCH  shift, and go to state 65

    command     go to state 11
    definition  go to state 12
    print       go to state 13
    assignment  go to state 14


State 40

   12 definition: DECL_FST ID DECL_SND . general_exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    WIN      shift, and go to state 21
    FAIL     shift, and go to state 22
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30
    AND      shift, and go to state 31
    OR       shift, and go to state 32
    XOR      shift, and go to state 33
    NOT      shift, and go to state 34

    type         go to state 35
    exp          go to state 36
    bool_exp     go to state 37
    general_exp  go to state 66


State 41

   16 assignment: ID ASSIGN ID .

    $default  reduce using rule 16 (assignment)


State 42

   15 assignment: ID ASSIGN general_exp .

    $default  reduce using rule 15 (assignment)


State 43

   19 exp: ADD ID . BINAR ID

    BINAR  shift, and go to state 67


State 44

   18 exp: ADD exp . BINAR exp

    BINAR  shift, and go to state 68


State 45

   21 exp: SUB ID . BINAR ID

    BINAR  shift, and go to state 69


State 46

   20 exp: SUB exp . BINAR exp

    BINAR  shift, and go to state 70


State 47

   23 exp: MULT ID . BINAR ID

    BINAR  shift, and go to state 71


State 48

   22 exp: MULT exp . BINAR exp

    BINAR  shift, and go to state 72


State 49

   25 exp: DIV ID . BINAR ID

    BINAR  shift, and go to state 73


State 50

   24 exp: DIV exp . BINAR exp

    BINAR  shift, and go to state 74


State 51

   27 exp: MOD ID . BINAR ID

    BINAR  shift, and go to state 75


State 52

   26 exp: MOD exp . BINAR exp

    BINAR  shift, and go to state 76


State 53

   29 exp: MAXX ID . BINAR ID

    BINAR  shift, and go to state 77


State 54

   28 exp: MAXX exp . BINAR exp

    BINAR  shift, and go to state 78


State 55

   31 exp: MINN ID . BINAR ID

    BINAR  shift, and go to state 79


State 56

   30 exp: MINN exp . BINAR exp

    BINAR  shift, and go to state 80


State 57

   35 bool_exp: AND ID . BINAR ID

    BINAR  shift, and go to state 81


State 58

   34 bool_exp: AND bool_exp . BINAR bool_exp

    BINAR  shift, and go to state 82


State 59

   37 bool_exp: OR ID . BINAR ID

    BINAR  shift, and go to state 83


State 60

   36 bool_exp: OR bool_exp . BINAR bool_exp

    BINAR  shift, and go to state 84


State 61

   39 bool_exp: XOR ID . BINAR ID

    BINAR  shift, and go to state 85


State 62

   38 bool_exp: XOR bool_exp . BINAR bool_exp

    BINAR  shift, and go to state 86


State 63

   41 bool_exp: NOT ID .

    $default  reduce using rule 41 (bool_exp)


State 64

   40 bool_exp: NOT bool_exp .

    $default  reduce using rule 40 (bool_exp)


State 65

    4 commands: WIN IF_BEGIN TRUE_BRANCH commands FALSE_BRANCH . commands IF_END

    WIN  shift, and go to state 3

    $default  reduce using rule 2 (commands)

    commands  go to state 87


State 66

   12 definition: DECL_FST ID DECL_SND general_exp .

    $default  reduce using rule 12 (definition)


State 67

   19 exp: ADD ID BINAR . ID

    ID  shift, and go to state 88


State 68

   18 exp: ADD exp BINAR . exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 89


State 69

   21 exp: SUB ID BINAR . ID

    ID  shift, and go to state 90


State 70

   20 exp: SUB exp BINAR . exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 91


State 71

   23 exp: MULT ID BINAR . ID

    ID  shift, and go to state 92


State 72

   22 exp: MULT exp BINAR . exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 93


State 73

   25 exp: DIV ID BINAR . ID

    ID  shift, and go to state 94


State 74

   24 exp: DIV exp BINAR . exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 95


State 75

   27 exp: MOD ID BINAR . ID

    ID  shift, and go to state 96


State 76

   26 exp: MOD exp BINAR . exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 97


State 77

   29 exp: MAXX ID BINAR . ID

    ID  shift, and go to state 98


State 78

   28 exp: MAXX exp BINAR . exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 99


State 79

   31 exp: MINN ID BINAR . ID

    ID  shift, and go to state 100


State 80

   30 exp: MINN exp BINAR . exp

    STRING   shift, and go to state 18
    INTEGER  shift, and go to state 19
    FLOAT    shift, and go to state 20
    ADD      shift, and go to state 24
    SUB      shift, and go to state 25
    MULT     shift, and go to state 26
    DIV      shift, and go to state 27
    MOD      shift, and go to state 28
    MAXX     shift, and go to state 29
    MINN     shift, and go to state 30

    type  go to state 35
    exp   go to state 101


State 81

   35 bool_exp: AND ID BINAR . ID

    ID  shift, and go to state 102


State 82

   34 bool_exp: AND bool_exp BINAR . bool_exp

    WIN   shift, and go to state 21
    FAIL  shift, and go to state 22
    AND   shift, and go to state 31
    OR    shift, and go to state 32
    XOR   shift, and go to state 33
    NOT   shift, and go to state 34

    bool_exp  go to state 103


State 83

   37 bool_exp: OR ID BINAR . ID

    ID  shift, and go to state 104


State 84

   36 bool_exp: OR bool_exp BINAR . bool_exp

    WIN   shift, and go to state 21
    FAIL  shift, and go to state 22
    AND   shift, and go to state 31
    OR    shift, and go to state 32
    XOR   shift, and go to state 33
    NOT   shift, and go to state 34

    bool_exp  go to state 105


State 85

   39 bool_exp: XOR ID BINAR . ID

    ID  shift, and go to state 106


State 86

   38 bool_exp: XOR bool_exp BINAR . bool_exp

    WIN   shift, and go to state 21
    FAIL  shift, and go to state 22
    AND   shift, and go to state 31
    OR    shift, and go to state 32
    XOR   shift, and go to state 33
    NOT   shift, and go to state 34

    bool_exp  go to state 107


State 87

    3 commands: commands . command
    4         | WIN IF_BEGIN TRUE_BRANCH commands FALSE_BRANCH commands . IF_END

    DECL_FST  shift, and go to state 7
    ID        shift, and go to state 9
    PRINT     shift, and go to state 10
    IF_END    shift, and go to state 108

    command     go to state 11
    definition  go to state 12
    print       go to state 13
    assignment  go to state 14


State 88

   19 exp: ADD ID BINAR ID .

    $default  reduce using rule 19 (exp)


State 89

   18 exp: ADD exp BINAR exp .

    $default  reduce using rule 18 (exp)


State 90

   21 exp: SUB ID BINAR ID .

    $default  reduce using rule 21 (exp)


State 91

   20 exp: SUB exp BINAR exp .

    $default  reduce using rule 20 (exp)


State 92

   23 exp: MULT ID BINAR ID .

    $default  reduce using rule 23 (exp)


State 93

   22 exp: MULT exp BINAR exp .

    $default  reduce using rule 22 (exp)


State 94

   25 exp: DIV ID BINAR ID .

    $default  reduce using rule 25 (exp)


State 95

   24 exp: DIV exp BINAR exp .

    $default  reduce using rule 24 (exp)


State 96

   27 exp: MOD ID BINAR ID .

    $default  reduce using rule 27 (exp)


State 97

   26 exp: MOD exp BINAR exp .

    $default  reduce using rule 26 (exp)


State 98

   29 exp: MAXX ID BINAR ID .

    $default  reduce using rule 29 (exp)


State 99

   28 exp: MAXX exp BINAR exp .

    $default  reduce using rule 28 (exp)


State 100

   31 exp: MINN ID BINAR ID .

    $default  reduce using rule 31 (exp)


State 101

   30 exp: MINN exp BINAR exp .

    $default  reduce using rule 30 (exp)


State 102

   35 bool_exp: AND ID BINAR ID .

    $default  reduce using rule 35 (bool_exp)


State 103

   34 bool_exp: AND bool_exp BINAR bool_exp .

    $default  reduce using rule 34 (bool_exp)


State 104

   37 bool_exp: OR ID BINAR ID .

    $default  reduce using rule 37 (bool_exp)


State 105

   36 bool_exp: OR bool_exp BINAR bool_exp .

    $default  reduce using rule 36 (bool_exp)


State 106

   39 bool_exp: XOR ID BINAR ID .

    $default  reduce using rule 39 (bool_exp)


State 107

   38 bool_exp: XOR bool_exp BINAR bool_exp .

    $default  reduce using rule 38 (bool_exp)


State 108

    4 commands: WIN IF_BEGIN TRUE_BRANCH commands FALSE_BRANCH commands IF_END .

    $default  reduce using rule 4 (commands)
